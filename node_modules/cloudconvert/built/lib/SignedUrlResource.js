"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const crypto = __importStar(require("crypto"));
class SignedUrlResource {
    sign(base, signingSecret, job, cacheKey) {
        const json = JSON.stringify(job);
        const base64 = Buffer.from(json || '').toString('base64');
        const base64UrlSafe = base64
            .replace('+', '-')
            .replace('/', '_')
            .replace(/=+$/, '');
        let url = `${base}?job=${base64UrlSafe}`;
        if (cacheKey) {
            url += `&cache_key=${cacheKey}`;
        }
        const hmac = crypto.createHmac('sha256', signingSecret);
        const signature = hmac.update(Buffer.from(url, 'utf-8')).digest('hex');
        url += `&s=${signature}`;
        return url;
    }
}
exports.default = SignedUrlResource;
//# sourceMappingURL=SignedUrlResource.js.map